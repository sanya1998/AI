1. Регрессия
Построить регрессию используя аналитическое решение через псевдообратную матрицу Мура-Пенроза. Данные задать следующим образом:

N=1000
x = np.linspace(0, 1, N)
z = 20*np.sin(2*np.pi * 3 * x) + 100*np.exp(x)
error = 10 * np.random.randn(N)
t = z + error

В качестве базисных функций использовать полиномы до степени M.

- В одном графическом окне построить график функции z(x) в виде непрерывной кривой, t(x) в виде точек и решения задачи регрессии в виде непрерывной кривой для M = 1
- В одном графическом окне построить график функции z(x) в виде непрерывной кривой, t(x) в виде точек и решения задачи регрессии в виде непрерывной кривой для M = 8
- В одном графическом окне построить график функции z(x) в виде непрерывной кривой, t(x) в виде точек и решения задачи регрессии в виде непрерывной кривой для M = 100
- Построить график зависимости ошибки E(w) от степени полинома M. M меняется от 1 до 100.